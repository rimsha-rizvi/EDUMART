@model EduMartFYP1.Models.ApplicationViewModel

@{
                /**/

                ViewBag.Title = "Admission Form";
}
<div class="form-w3l py-5">
    <div class="container py-xl-5 py-lg-3">
        <h3 class="title text-capitalize font-weight-light text-dark text-center mb-5">
            Admission
            <span class="font-weight-bold">form</span>
        </h3>
        <div class="register-form pt-md-4">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="styled-input form-group">
                    <p><b> @Session["username"] </b></p>
                </div>
                <div class="styled-input agile-styled-input-top form-group">
                    @Html.LabelFor(model => model.College, htmlAttributes: new { @class = "control-label col-md-2" })
                    @for (int i = 0; i < Model.College.Count(); i++)
                    {
                        @Html.EditorFor(m => Model.College[i].Checked)
                        @Html.DisplayFor(m => Model.College[i].Name)

                        @Html.HiddenFor(m => Model.College[i].Name)
                        @Html.HiddenFor(m => Model.College[i].Id)
                        @Html.ValidationMessageFor(model => Model.College[i], "", new { @class = "text-danger" })
                    }
                </div>
                <div class="styled-input agile-styled-input-top form-group">
                    @Html.LabelFor(model => model.Decipline, htmlAttributes: new { @class = "control-label col-md-2" })
                    @for (int i = 0; i < Model.Decipline.Count(); i++)
                    {
                        @Html.EditorFor(m => Model.Decipline[i].Checked)
                        @Html.DisplayFor(m => Model.Decipline[i].Name)
                        @Html.ValidationMessageFor(model => Model.Decipline, "", new { @class = "text-danger" })

                        @Html.HiddenFor(m => Model.Decipline[i].Name)
                        @Html.HiddenFor(m => Model.Decipline[i].Id)
                    }
                </div>
                <div class="styled-input agile-styled-input-top form-group">
                    @Html.LabelFor(model => model.Quota, htmlAttributes: new { @class = "control-label col-md-2" })
                    @for (int i = 0; i < Model.Quota.Count(); i++)
                    {
                        @Html.EditorFor(m => Model.Quota[i].Checked)
                        @Html.DisplayFor(m => Model.Quota[i].Name)
                        @Html.ValidationMessageFor(model => Model.Quota, "", new { @class = "text-danger" })

                        @Html.HiddenFor(m => Model.Quota[i].Name)
                        @Html.HiddenFor(m => Model.Quota[i].Id)
                    }
                </div>
                <div class="styled-input form-group">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
                <div class="styled-input form-group">
                    @Html.LabelFor(model => model.ObtainedMarks, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.ObtainedMarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ObtainedMarks, "", new { @class = "text-danger" })
                </div>
                <div class="styled-input form-group">
                    @Html.LabelFor(model => model.TotalMarks, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.TotalMarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TotalMarks, "", new { @class = "text-danger" })
                </div>
                <div class="styled-input form-group">
                    @Html.LabelFor(model => model.Percentage, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Percentage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Percentage, "", new { @class = "text-danger" })
                </div>
                <input type="submit" value="Subit">
            }
        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
